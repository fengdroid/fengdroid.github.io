<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[解决hexo部署个人网页时候无法正确显示出标签的问题]]></title>
      <url>http://fengdroid.github.io/2016/06/03/hexo-no-tags/</url>
      <content type="html"><![CDATA[<p>hexo建立个人静态网页时候，经常出现标签页无内容的情况。</p>
<a id="more"></a>
<h2 id="步骤一"><a href="#步骤一" class="headerlink" title="步骤一"></a>步骤一</h2><p>新建一个页面，命名为 tags 。命令如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page <span class="string">"tags"</span></span><br></pre></td></tr></table></figure></p>
<h2 id="步骤二"><a href="#步骤二" class="headerlink" title="步骤二"></a>步骤二</h2><p>编辑刚新建的页面，将页面的类型设置为 tags ，主题将自动为这个页面显示标签云。页面内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Tagcloud</span><br><span class="line">date: 2014-12-22 12:39:04</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p>
<p>注意：如果有启用多说 或者 Disqus 评论，默认页面也会带有评论。需要关闭的话，请添加字段:comments 并将值设置为 false，如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Tagcloud</span><br><span class="line">date: 2014-12-22 12:39:04</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p>
<h2 id="步骤三"><a href="#步骤三" class="headerlink" title="步骤三"></a>步骤三</h2><p>在菜单中添加链接。编辑 主题配置文件 ，添加 tags 到 menu 中，如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: /  </span><br><span class="line">  archives: /archives</span><br><span class="line">  tags: /tags</span><br></pre></td></tr></table></figure></p>
<h2 id="步骤四"><a href="#步骤四" class="headerlink" title="步骤四"></a>步骤四</h2><p>添加多个标签<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tags: [tag1, tag2, tag3]</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[使用PackageManager获取已卸载应用的包信息]]></title>
      <url>http://fengdroid.github.io/2016/06/03/get-the-packageinfo-of-uninstalled-application/</url>
      <content type="html"><![CDATA[<p>获取已卸载的应用包信息</p>
<a id="more"></a>
<h2 id="获取所有安装包信息，包括已卸载"><a href="#获取所有安装包信息，包括已卸载" class="headerlink" title="获取所有安装包信息，包括已卸载"></a>获取所有安装包信息，包括已卸载</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PackageManager pm = context.getPackageManager();</span><br><span class="line">List&lt;PackageInfo&gt; infos = pm.getInstalledPackages(PackageManager.GET_UNINSTALLED_PACKAGES);</span><br></pre></td></tr></table></figure>
<h2 id="获取指定包名应用包信息，及时该应用已卸载"><a href="#获取指定包名应用包信息，及时该应用已卸载" class="headerlink" title="获取指定包名应用包信息，及时该应用已卸载"></a>获取指定包名应用包信息，及时该应用已卸载</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PackageManager pm = context.getPackageManager();</span><br><span class="line">PackageInfo packageInfo = pm.getPackageInfo(<span class="string">"com.test"</span>, PackageManage.GET_UNINSTALLED_PACKAGES);</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Windows和Linux环境混合开发之代码格式化]]></title>
      <url>http://fengdroid.github.io/2016/05/31/format-code/</url>
      <content type="html"><![CDATA[<p>虽然Linux系统作为开发环境有诸多好处，但是因为各种原因，如界面不够绚丽、IDE选择不够多、效率较低等，很多开发还是习<br>惯于在Windows环境开发。但是，如果涉及源码开发，单单指望Windows环境肯定不行了，所以Windows+Linux混合使用成为标配&gt;，这也带来了格式不统一的问题如Unix和Windows行末编码不同、tab键和空格键混用等。</p>
<a id="more"></a> 
<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>虽然Linux系统作为开发环境有诸多好处，但是因为各种原因，如界面不够绚丽、IDE选择不够多、效率较低等，很多开发还是习惯于在Windows环境开发。但是，如果涉及源码开发，单单指望Windows环境肯定不行了，所以Windows+Linux混合使用成为标配，这也带来了格式不统一的问题如Unix和Windows行末编码不同、tab键和空格键混用等。</p>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">function format()&#123;</span><br><span class="line">for file in ` ls $1`</span><br><span class="line">do</span><br><span class="line">    if [ -d $1&quot;/&quot;$file ]</span><br><span class="line">    then</span><br><span class="line">        format $1&quot;/&quot;$file</span><br><span class="line">    else</span><br><span class="line">        local path=$1&quot;/&quot;$file</span><br><span class="line">        local name=$file</span><br><span class="line"></span><br><span class="line">        if [ &quot;$&#123;file##*.&#125;&quot; = &quot;xml&quot; ] || [ &quot;$&#123;file##*.&#125;&quot; = &quot;java&quot; ] || [ &quot;$&#123;file##*.&#125;&quot; = &quot;MF&quot; ]; then</span><br><span class="line">            echo &quot;formating $1&quot;/&quot;$file&quot;</span><br><span class="line">            sed -i &apos;s/\b\x0D\x0A\b/\n/g&apos; &quot;$1&quot;/&quot;$file&quot;</span><br><span class="line">            sed -i &apos;s/\t/    /g;s/[[:space:]]*$//g&apos; &quot;$1&quot;/&quot;$file&quot;</span><br><span class="line">        fi  </span><br><span class="line">    fi  </span><br><span class="line">done</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">format .</span><br></pre></td></tr></table></figure>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>1、保存上面代码到<code>format.sh</code><br>2、赋执行权限<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod a+x format.sh</span><br></pre></td></tr></table></figure></p>
<p>3、在需要格式化的代码目录执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">. format.sh</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[使用ContentProvider对外提供加密数据查询接口]]></title>
      <url>http://fengdroid.github.io/2016/05/31/contentprovide-share-encrypted-data/</url>
      <content type="html"><![CDATA[<p>Android开发中经常需要使用ContentProvider对外提供数据查询接口，而因数据安全考虑，我们的数据库中数据经常都是经过加<br>密存储的，这样，通过方法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">query(Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder)</span><br></pre></td></tr></table></figure></p>
<p>查询接口返回一个<code>Cursor</code>，没有解密方法是无法获得解密后的数据的，怎么办？简单，返回一个“特殊”的<code>Cursor</code>出去。</p>
<a id="more"></a>
<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>Android开发中经常需要使用ContentProvider对外提供数据查询接口，而因数据安全考虑，我们的数据库中数据经常都是经过加密存储的，这样，通过方法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">query(Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder)</span><br></pre></td></tr></table></figure></p>
<p>查询接口返回一个<code>Cursor</code>，没有解密方法是无法获得解密后的数据的，怎么办？简单，返回一个“特殊”的<code>Cursor</code>出去。</p>
<h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><h3 id="步骤一"><a href="#步骤一" class="headerlink" title="步骤一"></a>步骤一</h3><p>实现<code>Cursor</code>接口</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">public class ContentProviderCursor implements Cursor &#123;</span><br><span class="line">	//实现各种方法，比如getString方法</span><br><span class="line">	@Override</span><br><span class="line">	public String getString(int columnIndex) &#123;</span><br><span class="line">		String str = &quot;&quot;; //把需要解密的数据解密出来并返回</span><br><span class="line">		return str;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="步骤二"><a href="#步骤二" class="headerlink" title="步骤二"></a>步骤二</h3><p>封装原生<code>Cursor</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">public synchronized Cursor rawQuery(String selection, String[] selectionArgs) &#123;</span><br><span class="line">	Cursor cursor = null;</span><br><span class="line">	if (null != dbManager) &#123;</span><br><span class="line">		cursor = dbManager.rawQuery(selection, selectionArgs); // 这里cursor是加密数据的游标</span><br><span class="line">		if (null != cursor) &#123;</span><br><span class="line">			// 封装原生Cursor</span><br><span class="line">			cursor = new ContentProviderCursor(cursor, context);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		return cursor;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	return null;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>在<code>ContentProvider</code>对外提供的接口<code>query</code>中调用上面的<code>rawQuery</code>方法返回一个二次封装的<code>Cursor</code>对象，使用该<code>Cursor</code>对象执行<code>getString</code>等方法时，实际是执行了<code>ContentProviderCursor</code>中<code>getString</code>方法。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[搭建 hexo，在执行 hexo deploy 后,出现 error deployer not found:github 的错误]]></title>
      <url>http://fengdroid.github.io/2016/05/29/deployer-not-found-github/</url>
      <content type="html"><![CDATA[<p>今天尝试使用hexo搭建github pages，本地调试没什么问题，但是最后部署时报“error deployer not found:github”的错误，&gt;到网上原因，发现是hexo的版本升级导致的。</p>
<a id="more"></a> 
<h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>今天尝试使用hexo搭建github pages，本地调试没什么问题，但是最后部署时报“error deployer not found:github”的错误，到网上原因，发现是hexo的版本升级导致的。</p>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><h3 id="步骤一"><a href="#步骤一" class="headerlink" title="步骤一"></a>步骤一</h3><p>安装依赖的插件</p>
<pre><code class="bash">$ npm install hexo-deployer-git --save
</code></pre>
<h3 id="步骤二"><a href="#步骤二" class="headerlink" title="步骤二"></a>步骤二</h3><p>修改_config.yml，deploy的type由github改为git</p>
<h3 id="步骤三"><a href="#步骤三" class="headerlink" title="步骤三"></a>步骤三</h3><p>重新部署</p>
<h3 id="参考：error-deployer-not-found-github"><a href="#参考：error-deployer-not-found-github" class="headerlink" title="参考：error deployer not found:github"></a>参考：<a href="https://v2ex.com/t/175940" target="_blank" rel="external">error deployer not found:github</a></h3>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[使用Hexo部署静态网页的基本命令]]></title>
      <url>http://fengdroid.github.io/2016/05/29/hexo-deploy-step/</url>
      <content type="html"><![CDATA[<p>使用Hexo部署静态网页的基本步骤和命令</p>
<a id="more"></a> 
<h2 id="部署步骤"><a href="#部署步骤" class="headerlink" title="部署步骤"></a>部署步骤</h2><h3 id="每次部署的步骤，可按以下三步来进行："><a href="#每次部署的步骤，可按以下三步来进行：" class="headerlink" title="每次部署的步骤，可按以下三步来进行："></a>每次部署的步骤，可按以下三步来进行：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo generate</span><br><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<h3 id="本地调试"><a href="#本地调试" class="headerlink" title="本地调试"></a>本地调试</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g <span class="comment">#生成</span></span><br><span class="line">$ hexo s <span class="comment">#启动本地服务，进行文章预览调试</span></span><br></pre></td></tr></table></figure>
<h3 id="其他常用命令"><a href="#其他常用命令" class="headerlink" title="其他常用命令"></a>其他常用命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"postName"</span> <span class="comment">#新建文章</span></span><br><span class="line">$ hexo new page <span class="string">"pageName"</span> <span class="comment">#新建页面</span></span><br><span class="line">$ hexo generate <span class="comment">#生成静态页面至public目录</span></span><br><span class="line">$ hexo server <span class="comment">#开启预览访问端口（默认端口4000，'ctrl + c'关闭server）</span></span><br><span class="line">$ hexo deploy <span class="comment">#将.deploy目录部署到GitHub</span></span><br><span class="line">$ hexo <span class="built_in">help</span>  <span class="comment"># 查看帮助</span></span><br><span class="line">$ hexo version  <span class="comment">#查看Hexo的版本</span></span><br></pre></td></tr></table></figure>
<h3 id="参考：使用hexo部署静态网页指导"><a href="#参考：使用hexo部署静态网页指导" class="headerlink" title="参考：使用hexo部署静态网页指导"></a>参考：<a href="http://www.cnblogs.com/zhcncn/p/4097881.html" target="_blank" rel="external">使用hexo部署静态网页指导</a></h3>]]></content>
    </entry>
    
  
  
</search>
